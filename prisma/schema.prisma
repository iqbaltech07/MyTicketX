generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum EventType {
  ONLINE
  OFFLINE
}

model Otp {
  id        String   @id @default(cuid())
  code      String
  expiry    DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  accounts      Account[]
  otps          Otp[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Category {
  id     String  @id @default(cuid())
  name   String  @unique
  events Event[]
}

model Event {
  id          String   @id @default(cuid())
  name        String
  date        DateTime
  thumb       String?
  location    String?
  description String?  @db.Text
  organizer   String?
  isDraf      Boolean  @default(true)
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  tickets     Ticket[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Ticket {
  id        String   @id @default(cuid())
  type      String
  price     Decimal
  quantity  Int
  qrCode    String?
  eventId   String
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
